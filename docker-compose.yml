services:
  customerservice:
    image: micromagikerne/customer-service:latest-dev
    ports:
    - 8201:80
    depends_on:
    - mongodb
    environment: 
      - connectionsstring=mongodb://root:password@mongodb:27017/?authSource=admin
      - database=MikroDB
      - collection=Customers
    networks:
      - mikronetwork

  catalogservice:
      image: micromagikerne/catalog-service:latest-dev
      ports:
      - 8202:80
      depends_on:
      - mongodb
      environment:
      - imagepath=//srv/images
      - connectionsstring=mongodb://root:password@mongodb:27017/?authSource=admin
      - database=MikroDB
      - collection=Catalog
      networks:
      - mikronetwork
      volumes: 
      - images:/srv/images

  bidreceiver:
      image: micromagikerne/auctiontrackerreceiver-service:latest-dev
      ports: 
      - 8203:80
      depends_on:
      - catalogservice
      - Rabbito
      restart: unless-stopped
      environment:
      - rabbithostname=rabbit-dev
      - rabbitqueue=bidq
      - cataloghttpbase=http://catalogservice:80
      - memcache=memcached:11211
      networks:
      - mikronetwork
    
  bidworker:
      image: micromagikerne/auctiontrackerworker-service:latest-dev
      ports:
      - 8204:80
      depends_on:
      - Rabbito
      - mongodb
      restart: unless-stopped
      environment:
      - connectionsstring=mongodb://root:password@mongodb:27017/?authSource=admin
      - database=Bids
      - collection=ActiveBids
      - collection2=BidLogs
      - rabbithostname=rabbitmq-dev
      - rabbitqueue=bidq
      networks:
      - mikronetwork
     
  memcached:
      image: memcached:1.6.9
      ports:
      - 11211:11211

  nginx:
    image: nginx:latest
    ports:
    - 4000:4000
    depends_on:
    - customerservice
    volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - mikronetwork
  Rabbito:
    image: rabbitmq:management
    hostname: "rabbitmq-dev"
    ports: 
      - "15672:15672"
      - "5672:5672"
    networks: 
      - mikronetwork

  mongodb:
    image: mongo:latest
    ports:
      - 27018:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: MikroDB
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - mikronetwork

  loki:
    image: grafana/loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - mikronetwork
      - loki

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    networks:
      - mikronetwork
      - loki

volumes:
  mongodb_data_container:
  images:
networks:
  mikronetwork:
  loki:
