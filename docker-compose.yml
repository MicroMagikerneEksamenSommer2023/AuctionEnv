services:
  customerservice:
    platform: linux/amd64
    image: micromagikerne/customer-service:latest-dev
    ports:
    - 8201:80
    depends_on:
    - mongodb
    environment: 
      - connectionsstring=mongodb://root:password@mongodb:27017/?authSource=admin
      - database=MikroDB
      - collection=Customers
      - lokihostname=loki
    networks:
      - mikronetwork

  catalogservice:
      platform: linux/amd64
      image: micromagikerne/catalog-service:latest-dev
      ports:
      - 8202:80
      depends_on:
      - mongodb
      environment:
      - imagepath=//srv/images
      - connectionsstring=mongodb://root:password@mongodb:27017/?authSource=admin
      - database=MikroDB
      - collection=Catalog
      - redisconnection=redis:6379
      - lokihostname=loki
      networks:
      - mikronetwork
      volumes: 
      - images:/srv/images
  valuationservice:
      platform: linux/amd64
      image: micromagikerne/valuation-service:latest-dev
      ports:
      - 8205:80
      depends_on:
      - mongodb
      environment:
      - imagepath=//srv/images
      - connectionsstring=mongodb://root:password@mongodb:27017/?authSource=admin
      - database=MikroDB
      - collection=Valuations
      - lokihostname=loki
      networks:
      - mikronetwork
      volumes: 
      - images:/srv/images

  bidreceiver:
      platform: linux/amd64
      image: micromagikerne/auctiontrackerreceiver-service:latest-dev
      ports: 
      - 8203:80
      depends_on:
      - catalogservice
      - Rabbito
      restart: unless-stopped
      environment:
      - rabbithostname=rabbitmq-dev
      - rabbitqueue=bidq
      - cataloghttpbase=http://catalogservice:80/catalogservice/v1/
      - redisconnection=redis:6379
      - lokihostname=loki
      networks:
      - mikronetwork
    
  bidworker:
      platform: linux/amd64
      image: micromagikerne/auctiontrackerworker-service:latest-dev
      ports:
      - 8204:80
      depends_on:
      - Rabbito
      - mongodb
      restart: unless-stopped
      environment:
      - connectionsstring=mongodb://root:password@mongodb:27017/?authSource=admin
      - database=Bids
      - collection=BidLogs
      - rabbithostname=rabbitmq-dev
      - rabbitqueue=bidq
      - lokihostname=loki
      networks:
      - mikronetwork

  authservice:
    platform: linux/amd64
    image: micromagikerne/auth-service:latest-dev
    depends_on:
      - vault_dev
      - script
    restart: unless-stopped
    ports:
    - "8206:80"
    environment:
      - HostnameVault=vault
      - customerhttpbase=http://customerservice:80/customerservice/v1/
      - lokihostname=loki
    networks:
      - mikronetwork
      
  vault_dev:
    image: hashicorp/vault:latest
    restart: on-failure:10
    hostname: vault
    ports: 
      - "8200:8200"      
    environment:
      VAULT_ADDR: 'http://0.0.0.0:8200'
      VAULT_LOCAL_CONFIG: '{"listener": [{"tcp":{"address":"0.0.0.0:8201","tls_disable":"0", "tls_cert_file":"/data/cert.pem","tls_key_file":"/data/key.pem"}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h"}, "ui": true}'
      VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
      VAULT_TOKEN: '00000000-0000-0000-0000-000000000000'
    cap_add:
      - IPC_LOCK
    volumes:
      - ./vault-volume:/data
    healthcheck:
      retries: 5
    command: server -dev -dev-root-token-id="00000000-0000-0000-0000-000000000000"
    networks:
      - mikronetwork
      

  script:
    image: hashicorp/vault:latest
    command: sh "/app/populate_vault.sh"
    depends_on:
      - vault_dev
    healthcheck:
      retries: 5
    volumes:
      - ./populate_vault.sh:/app/populate_vault.sh
    networks:
      - mikronetwork
      

  redis:
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    networks:
      - mikronetwork

  nginx:
    image: nginx:latest
    ports:
    - 4000:4000
    depends_on:
    - customerservice
    - authservice
    - catalogservice
    - valuationservice
    - bidreceiver
    - bidworker
    volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - mikronetwork
  Rabbito:
    image: rabbitmq:management
    hostname: "rabbitmq-dev"
    ports: 
      - "15672:15672"
      - "5672:5672"
    networks: 
      - mikronetwork

  mongodb:
    image: mongo:latest
    ports:
      - 27018:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: MikroDB
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - mikronetwork

  loki:
    image: grafana/loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - mikronetwork
      - loki

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    networks:
      - mikronetwork
      - loki

volumes:
  mongodb_data_container:
  images:
  redis-data:
networks:
  mikronetwork:
  loki:
